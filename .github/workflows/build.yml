name: Build main

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 6 * * *'

# The release job needs write access to repo contents
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    container: ghcr.io/xu-cheng/texlive-full:20250401

    steps:
      - uses: actions/checkout@v4
      - name: Compile via Makefile
        run: |
          make              # build default target

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: resumes
          path: |
            main.pdf
            pl.pdf
            cloud.pdf
      # Mirror main.pdf into homepage-11ty
      - name: Checkout homepage-11ty
        if: github.ref == 'refs/heads/main'
        uses: actions/checkout@v4
        with:
          repository: cderici/homepage-11ty
          token: ${{ secrets.PAGES_PUSH_TOKEN }}
          ref:  main
          path: site

      - name: Copy and push resume
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p site/src/assets/docs
          cp main.pdf site/src/assets/docs/CanerDerici_Resume.pdf
          cd site
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add src/assets/docs/CanerDerici_Resume.pdf
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update resume from ${GITHUB_REPOSITORY}@${GITHUB_SHA}"
            git push origin HEAD
          fi

  release:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.result == 'success' }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: resumes
          path: .

      - name: Create / Update single release
        uses: ncipollo/release-action@v1
        with:
          tag: latest-pdf
          name: Most Recent Build
          body: |
            Automated build from commit ${{ github.sha }}.
            This release is replaced on every successful CI run.
          artifacts: "main.pdf,pl.pdf,cloud.pdf"
          allowUpdates: true
          replacesArtifacts: true
          artifactContentType: application/pdf
          token: ${{ secrets.GITHUB_TOKEN }}
